<Window x:Class="NotenManager.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NotenManager"
        xmlns:datamodels="clr-namespace:NotenManager.DataModels"
        xmlns:ribbon="clr-namespace:System.Windows.Controls.Ribbon.Primitives;assembly=System.Windows.Controls.Ribbon"
        xmlns:localControls="clr-namespace:NotenManager.Controls"
        mc:Ignorable="d"
        Title="NotenManager" VerticalAlignment="Stretch" Width="525"
        WindowState="Maximized" Height="399.578"
        Name="NotenManager">
    <Window.Resources>
 
        <datamodels:AppViewModel x:Key="vm"></datamodels:AppViewModel>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Name="UpperRow" Height="90"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>

        </Grid.RowDefinitions>

        <Ribbon Grid.Row="0" Background="Transparent"  Template="{DynamicResource RibbonControlTemplate1}" >
            <Ribbon.ApplicationMenu>

                <RibbonApplicationMenu>
                    <RibbonApplicationMenuItem Header="Speichern" ImageSource="Images/Save.png" Command="{Binding SaveClickCommand, Source={StaticResource vm}}" />
                    <RibbonApplicationMenuItem Header="Öffnen" ImageSource="Images/open.png" Command="{Binding OpenClickCommand, Source={StaticResource vm}}" />

                </RibbonApplicationMenu>
            </Ribbon.ApplicationMenu>


        </Ribbon>

        <Grid Grid.Row="1" Margin="0, 23, 0,0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="6*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>
                <ListBox Grid.Column="0" Background="Aqua" SelectedItem="{Binding Schule.SelectedGroup, Source={StaticResource vm}}" ItemsSource="{Binding Schule.StudentGroups, Source={StaticResource vm} }">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <localControls:EditableListBoxItem EditedValue="{Binding Path=Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></localControls:EditableListBoxItem>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <DataGrid x:Name="studentGrid" AutoGenerateColumns="False" Grid.Column="1" SelectedItem="{Binding Schule.SelectedGroup.SelectedStudent, Source={StaticResource vm}, Mode=TwoWay}" ItemsSource="{Binding Path=Schule.SelectedGroup.Students, Source={StaticResource vm}}" CanUserSortColumns="True">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Name" Width="Auto" CanUserSort="True" CanUserReorder="True" Binding="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <DataGridTextColumn Header="SurName" Width="Auto" CanUserSort="True" CanUserReorder="True" Binding="{Binding SurName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <DataGridTextColumn Header="Klein1" Width="Auto" CanUserSort="True" CanUserReorder="True" Binding="{Binding ersteKlein, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <DataGridTextColumn Header="Klein2" Width="Auto" CanUserSort="True" CanUserReorder="True" Binding="{Binding zweiteKlein, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <DataGridTextColumn Header="Klein3" Width="Auto" CanUserSort="True" CanUserReorder="True" Binding="{Binding dritteKlein, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <DataGridTextColumn Header="Klein4" Width="Auto" CanUserSort="True" CanUserReorder="True" Binding="{Binding vierteKlein, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <DataGridTextColumn Header="Klein5" Width="Auto" CanUserSort="True" CanUserReorder="True" Binding="{Binding fünfteKlein, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <DataGridTextColumn Header="Groß1" Width="Auto" CanUserSort="True" CanUserReorder="True" Binding="{Binding ersteGross, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <DataGridTextColumn Header="Groß2" Width="Auto" CanUserSort="True" CanUserReorder="True" Binding="{Binding zweiteGross, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <DataGridTextColumn Header="Average" Width="Auto" CanUserSort="True" CanUserReorder="True" Binding="{Binding Average, Mode=OneWay}" IsReadOnly="True"/>
                    </DataGrid.Columns>

                </DataGrid>
                <Button x:Name="AddStudent" Grid.Row="1" Grid.Column="1" Width="75" Height="30" Margin="0,0,0,0"  HorizontalAlignment="Left" Command="{Binding Schule.SelectedGroup.AddCommand, Source={StaticResource vm}}" >add</Button>
                <Button x:Name="DeleteStudent" Grid.Row="1" Grid.Column="1" Width="75" Height="30" Margin="0,0,0,0"  HorizontalAlignment="Right" Command="{Binding Schule.SelectedGroup.DeleteCommand, Source={StaticResource vm}}">delete</Button>
                <Button x:Name="AddClass" Grid.Row="1" Height="30" Width="20" HorizontalAlignment="Left" Command="{Binding Schule.AddStudentGroup, Source={StaticResource vm}}">+</Button>
                <Button x:Name="RemoveClass" Grid.Row="1" Height="30" Width="20" HorizontalAlignment="Right" Command="{Binding Schule.DeleteStudentGroup, Source={StaticResource vm}}">-</Button>

            </Grid>
        </Grid>
    </Grid>
</Window>
